#pragma once


#ifdef __cplusplus
extern "C" {
#endif

void adc_interrupt_handler();
void dma_interrupt_handler();
void tim1_update_interrupt_handler();
void tim1_trigger_and_commutation_interrupt_handler();
void tim2_global_handler();



#ifdef __cplusplus
}

// The autogenerated code defaults to C which calls our functions above; otherwise *we* prefer using C++.

#include "type_definitions.hpp"
#include "constants.hpp"


uint32_t get_adc_update_number();
uint32_t get_hall_unobserved_number();
uint32_t get_hall_observed_number();
StateReadout get_latest_readout();


// Initialize the angle tracking system on startup to read the initial hall sensor state.
void initialize_position_tracking();

// Setup ADC for reading motor phase currents.
void adc_init();

// Select which interrupts to handle.
void interrupts_init();

// Enable the timers to start the ADC and motor control loops.
void enable_timers();


// Data queue
// ----------

void readout_history_reset();
bool readout_history_full();
bool readout_history_available();
StateReadout readout_history_pop();


// End ifdef __cplusplus
#endif